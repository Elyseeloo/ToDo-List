{"version":3,"sources":["components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","useState","isDone","setIsDone","onClick","prevValue","onDoubleClick","onChecked","id","style","textDecoration","item","App","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","index","className","onChange","event","newValue","target","value","type","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"sKA2BeA,MAzBf,SAAkBC,GAChB,IAIA,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OACE,yBACEC,QARJ,WACED,GAAU,SAACE,GACT,OAAQA,MAORC,cAAe,WACbN,EAAMO,UAAUP,EAAMQ,MAGxB,wBAAIC,MAAOP,EAnBO,CACpBQ,eAAgB,gBAkBsB,MAAOV,EAAMW,QCgCxCC,MAnDf,WACE,MAAkCX,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAA0Bb,mBAAS,IAAnC,mBAAOc,EAAP,KAAcC,EAAd,KAcA,SAASC,EAAWT,GAClBQ,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACR,EAAMS,GAC7B,OAAOA,IAAUZ,QAKvB,OACE,yBAAKa,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,SA1Bb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BZ,EAAaU,IAwBsBG,KAAK,OAAOD,MAAOb,IAClD,4BAAQT,QAtBd,WACEY,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAExBC,EAAa,MAmBP,uCAGJ,6BACE,4BACGC,EAAMa,KAAI,SAACC,EAAUT,GAAX,OACT,kBAAC,EAAD,CACEU,IAAKV,EACLZ,GAAIY,EACJT,KAAMkB,EACNtB,UAAWU,WCzCzBc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.78b4c6d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDoItem(props) {\n  const strikeThrough = {\n    textDecoration: \"line-through\"\n  };\n\n  const [isDone, setIsDone] = useState(false);\n\n  function handleClick() {\n    setIsDone((prevValue) => {\n      return !prevValue;\n    });\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      onDoubleClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li style={isDone ? strikeThrough : null}>{props.item}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              item={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}